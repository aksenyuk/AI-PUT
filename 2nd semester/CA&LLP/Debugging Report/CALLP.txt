example 3.

#include <stdio.h>

int main() {
    int t[4] = { 1, 2, 3, 4 };
    for (int i = 3; i >= 0; i--) {
        t[i] -= 1;
        printf("%d\n", t[i]);
    }
    return 0;
}


Error was caused by the "unsigned" statement.
We cannot use "unsigned" type for int i, because "-1" that gets executed from the last iteration is not positive.

example 4.

#include <stdio.h>

int f(int p, int r) {
    if (p == r)
        return p;
    if (p - r == 1)
        return r;
    return f(p + 1, r - 1);
}

int main() {
    int p, r;
    scanf("%d %d", &p, &r);
    printf("%d\n", f(p, r));
    return 0;
}

ex2.

#include <stdio.h>
#include <stdlib.h>

int main() {
    int n;
    scanf("%d", &n);

    int **t = malloc(n * sizeof(*t));
    for (int i = 0; i < n; i++){
        t[i] = malloc(n * sizeof(*t[i]));
        free(t[i]);
    }    
    free(t);
    return 0;
}

ex5.
#include <stdio.h>
#include <stdlib.h>

void f(char *p, int n) {
    for (int i = 0; i < n; i++) {
        p[i] += 1;
    }
    printf("%s\n", p);
}

int main() {
    char buffer[8] = "abcdefgh";
    int length = sizeof(buffer);
    f(buffer, length);
    return 0;
}

ex1.
#include <stdio.h>

int main() {
    int n;
    scanf("%d", &n);

    int y = 0;
    if (n % 2 == 0) {
        y = 2;
    }
    y++;
    for (int i = 0; i < 10; i++) {
        printf("%d\n", y + i);
    }
    return 0;
}
